import xml.etree.ElementTree as ET

def extract_and_write_hierarchy(xml_file, output_file):
    unique_elements = set()  # Menge f√ºr eindeutige Elemente
    lines = []

    def recursive_extract(element, depth=0):
        if element.tag not in unique_elements:
            unique_elements.add(element.tag)
            lines.append("  " * depth + element.tag)
        child_elements = list(element)
        for child in child_elements:
            recursive_extract(child, depth + 1)
        if element.tag.endswith('_list'):
            lines.append("")  # Leere Zeile nach Listen

    tree = ET.parse(xml_file)
    root = tree.getroot()
    
    recursive_extract(root)
    
    # Entferne die letzte leere Zeile, falls vorhanden
    if lines[-1] == "":
        lines = lines[:-1]
    
    with open(output_file, 'w') as f:
        for line in lines:
            f.write(line + "\n")

# Beispiel XML-Datei und Ausgabe-Datei
xml_file = '/mnt/data/input.xml'  # Ersetzen Sie dies durch den Pfad zu Ihrer XML-Datei
output_file = '/mnt/data/output.txt'

# Hierarchie der XML-Tags extrahieren und in eine Textdatei schreiben
extract_and_write_hierarchy(xml_file, output_file)

print(f"Die XML-Hierarchie wurde in {output_file} geschrieben.")